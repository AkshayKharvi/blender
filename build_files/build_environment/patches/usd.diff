diff -x .git -ur usd.orig/cmake/defaults/Options.cmake external_usd/cmake/defaults/Options.cmake
--- usd.orig/cmake/defaults/Options.cmake	2019-11-29 12:10:36.860162516 +0100
+++ external_usd/cmake/defaults/Options.cmake	2019-11-28 13:00:33.197957712 +0100
@@ -25,6 +25,7 @@
 option(PXR_VALIDATE_GENERATED_CODE "Validate script generated code" OFF)
 option(PXR_HEADLESS_TEST_MODE "Disallow GUI based tests, useful for running under headless CI systems." OFF)
 option(PXR_BUILD_TESTS "Build tests" ON)
+option(PXR_BUILD_USD_TOOLS "Build commandline tools" ON)
 option(PXR_BUILD_IMAGING "Build imaging components" ON)
 option(PXR_BUILD_EMBREE_PLUGIN "Build embree imaging plugin" OFF)
 option(PXR_BUILD_OPENIMAGEIO_PLUGIN "Build OpenImageIO plugin" OFF)
diff -x .git -ur usd.orig/cmake/defaults/Packages.cmake external_usd/cmake/defaults/Packages.cmake
--- usd.orig/cmake/defaults/Packages.cmake	2019-11-29 12:10:36.860162516 +0100
+++ external_usd/cmake/defaults/Packages.cmake	2019-11-28 13:00:33.185957483 +0100
@@ -64,7 +64,7 @@
 endif()
 
 # --TBB
-find_package(TBB REQUIRED COMPONENTS tbb)
+find_package(TBB)
 add_definitions(${TBB_DEFINITIONS})
 
 # --math
diff -x .git -ur usd.orig/pxr/base/lib/plug/initConfig.cpp external_usd/pxr/base/lib/plug/initConfig.cpp
--- usd.orig/pxr/base/lib/plug/initConfig.cpp	2019-11-29 12:10:36.860162516 +0100
+++ external_usd/pxr/base/lib/plug/initConfig.cpp	2019-11-29 11:16:29.716256692 +0100
@@ -33,6 +33,7 @@
 #include "pxr/base/arch/symbols.h"
 
 #include <boost/preprocessor/stringize.hpp>
+#include <boost/dll/runtime_symbol_info.hpp>
 
 PXR_NAMESPACE_OPEN_SCOPE
 
@@ -83,6 +84,20 @@
 
     sharedLibPath = TfGetPathName(sharedLibPath);
 
+    // Executable location, which is relevant when using static linking.
+    boost::filesystem::path executablePath = boost::dll::program_location();
+    if (!executablePath.empty()) {
+        boost::filesystem::path pluginPath;
+
+        // The path MUST end in a slash, or symlinks will not be treated as directory.
+        // Two paths are added, one for relative to Blender, one for relative to unit tests.
+        pluginPath = executablePath.parent_path() / "lib/usd/";
+        result.push_back(pluginPath.string());
+
+        pluginPath = executablePath.parent_path().parent_path() / "lib/usd/";
+        result.push_back(pluginPath.string());
+    }
+
     // Environment locations.
     _AppendPathList(&result, TfGetenv(pathEnvVarName), sharedLibPath);
 
@@ -94,6 +109,13 @@
     _AppendPathList(&result, installLocation, sharedLibPath);
 #endif // PXR_INSTALL_LOCATION
 
+    if (!TfGetenv("PXR_PATH_DEBUG").empty()) {
+        printf("USD Plugin paths: (%zu in total):\n", result.size());
+        for(const std::string &path : result) {
+            printf("    %s\n", path.c_str());
+        }
+    }
+
     Plug_SetPaths(result);
 }
 
diff -x .git -ur usd.orig/pxr/usd/CMakeLists.txt external_usd/pxr/usd/CMakeLists.txt
--- usd.orig/pxr/usd/CMakeLists.txt	2019-11-29 12:10:36.860162516 +0100
+++ external_usd/pxr/usd/CMakeLists.txt	2019-11-28 13:00:33.197957712 +0100
@@ -1,6 +1,5 @@
 set(DIRS
     lib
-    bin
     plugin
 )
 
@@ -8,3 +7,8 @@
     add_subdirectory(${d})
 endforeach()
 
+if (PXR_BUILD_USD_TOOLS)
+    add_subdirectory(bin)
+else()
+    message(STATUS "Skipping commandline tools because PXR_BUILD_USD_TOOLS=OFF")
+endif()
